#!/bin/sh

set -e

ROOTARGS="-uroot -p`cat /var/lib/ensemble/mysql.passwd`"

# Others can join that service but only the lowest will be the master
# Note that we could be more automatic but for now we will wait for
# service and unit settings to define a "master override" to allow
# migrating slaves selectively
master=`relation-list | head -1`
if [ "$ENSEMBLE_REMOTE_UNIT" != "$master" ] ; then
  exit 0;
fi
echo master=$master

for setting in user password ip port dumpurl; do
    $setting=`relation-get $setting`
    if [ -z "$setting" ] ; then
        echo "$setting is empty! Aborting"
        exit 1
    fi        
done

# Normally this will be empty anyway, but it will save our admin
# if he accidentally relates a master with some other master!
backup=/var/backups/alldbs-`date +%Y%m%d%H%M%S`.sql.gz
mysqldump $ROOTARGS --all-databases --single-transaction |gzip> $backup

dumpurl=http://$ip/$dumpurl
echo Importing $dumpurl into MySQL
curl $dumpurl | mysql $ROOTARGS

serverid=`augtool ls /files/etc/mysql/my.cnf/target[3]/server_id`
if [ $serverid -lt 100000 ] ; then
  # add 100000 to server_id to avoid conflicts w/ masters
  let serverid=$serverid+100000
  echo -e "set /files/etc/mysql/my.cnf/target[3]/server_id $serverid\nsave" | augtool -b
  service mysql stop
  # clear binlogs
  binlog=`augtool get /files/etc/mysql/my.cnf/target[3]/log_bin|cut -d' ' -f3`
  backupdir=/var/backups/binlogs-`date +%Y%m%d%H%M%S`
  mkdir -p $backupdir
  mv $binlog* $backupdir
  service mysql start
fi

mysql $ROOTARGS -e "CHANGE MASTER TO MASTER_HOST=\`$ip\`, MASTER_USER=\`$user\`, MASTER_PASSWORD='$password', MASTER_PORT=$port"
mysql $ROOTARGS -e "START SLAVE"
mysql $ROOTARGS -e "SHOW SLAVE STATUS"
