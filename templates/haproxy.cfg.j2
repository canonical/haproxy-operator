global
    maxconn {{ config_global_max_connection }}
    user haproxy
    group haproxy
    
    # rsyslog is installed on ubuntu 24.04 by default
    # We send logs to the syslog server at :514 UDP
    # This is because grafana-agent wraps around Promtail and automatically configures it to scrape logs in /var/log. 
    log 127.0.0.1:514 local0

    # haproxy 2.8, intermediate config, OpenSSL 1.1.1k
    # https://ssl-config.mozilla.org/#server=haproxy&version=2.8&config=intermediate&openssl=1.1.1k&guideline=5.7

    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    ssl-dh-param-file /etc/haproxy/ffdhe2048.txt

defaults
    log global
    mode http
    option httplog
    option dontlognull
    retries 3
    timeout queue 20000
    timeout client 50000
    timeout connect 5000
    timeout server 50000

{% if services %}

{% for service in services %}
{{ service }}
{% endfor %}

{% elif ingress_requirers_information.backends %}

frontend ingress
    mode http
    bind :80
   
    # Redirect HTTP to HTTPS
    # http-request redirect scheme https unless { ssl_fc }

    # generate path ACLs for ingress
{% for backend in ingress_requirers_information.backends %}
    acl path_{{ backend.backend_name }} path -i -m beg /{{ backend.backend_name }}
    use_backend {{ backend.backend_name }} if path_{{ backend.backend_name }} 
{% endfor %}

{% for backend in ingress_requirers_information.backends %}
backend {{ backend.backend_name }}
    balance roundrobin
{% for server in backend.servers %}
    server {{ server.server_name }} {{ server.hostname_or_ip }}:{{ server.port }} check
{% endfor %}
{% endfor %}

{% else %}

frontend default
    bind :80
    default_backend default 

backend default
    http-request return status 200 content-type "text/plain" string "Default page for the haproxy-operator charm"


{% endif %}

